service: poprox-website
frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-lift
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-domain-manager
custom:
  pythonRequirements:
    dockerizePip: false
    useDownloadCache: false
    useStaticCache: false
    slim: true
    strip: false
    slimPatterns:
      - "**/*.csv"
      # This libopenblas belongs to numpy and might increase size of lambda unnecessarily
      - "**/libopenblasp-*.dynlib*"
  customDomain:
    domainName: user.poprox.ai
    basePath: ''
    apiType: http
    endpointType: REGIONAL
    createRoute53Record: true
    createRoute53IPv6Record: true
    securityPolicy: tls_1_2

  wsgi:
    app: app.app
    packRequirements: false

package:
  patterns:
    - "!venv/**"
    - "!models/**"
    - "!node_modules/**"
    - "!tests/**"
    - "**.py"
    - "**.html"

provider:
  name: aws
  runtime: python3.11
  versionFunctions: false
  region: ${opt:region, "us-east-1"}
  stage: ${opt:stage, "prod"}
  environment:
    env: ${stage}
    region: ${region}
    log_level: "INFO"
    POPROX_DB_HOST: ${cf:poprox-datasources-stack-dev.RDSDatabaseEndpointAddress}
    POPROX_DB_PORT: 5432
    POPROX_DB_NAME: poprox
    POPROX_DB_USER: ${ssm:/poprox/database/username}
    POPROX_DB_PASSWORD: ${ssm:/poprox/database/password}
    POPROX_HMAC_KEY: ${ssm:/poprox/hmac_key}
    URL_PREFIX: "/"
    APP_SECRET_KEY: ${ssm:/poprox/web/app_secret}
    SEND_EMAIL_QUEUE_URL: ${cf:poprox-serverless-interfaces-${self:provider.stage}.SendEmailQueue}
    POPROX_DEFAULT_RECS_ENDPOINT_URL: ${cf:poprox-default-recommender-${self:provider.stage}.HttpApiUrl}
    GENERATE_RECS_QUEUE_URL: ${cf:poprox-serverless-interfaces-${self:provider.stage}.GenerateNewsletterQueue}
    POPROX_WEB_ADMIN_PASS: ${ssm:/poprox/web/app_secret}

  memorySize: 512
  timeout: 900
  architecture: x86_64

  vpc:
    securityGroupIds:
      - ${cf:poprox-datasources-stack-dev.LambdaSecurityGroup}
    subnetIds:
      - ${cf:poprox-datasources-stack-dev.PrivateSubnet1a}
      - ${cf:poprox-datasources-stack-dev.PrivateSubnet1b}

  iam:
    role:
      # Add statements to the IAM role to give permissions to Lambda functions
      statements:
        - Effect: Allow
          Action:
            - "sqs:SendMessage"
            - "sqs:ReceiveMessage"
          Resource: "*"
        - Effect: Allow
          Action:
            - "logs:*"
          Resource: "*"

functions:
  app:
    handler: wsgi_handler.handler
    timeout: 30
    events:
      - httpApi:
          method: '*'
          path: /
      - httpApi:
          method: '*'
          path: /{proxy+}
